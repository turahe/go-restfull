name: Docker Hub Build and Push

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: turahe/go-restfull

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push production image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: production
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:prod
          ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push staging image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: staging
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push development image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: development
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate Swagger docs
      if: github.event_name != 'pull_request'
      run: |
        docker run --rm -v $(pwd):/app -w /app golang:1.24.5-alpine sh -c "
          apk add --no-cache git
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g main.go
        "

    - name: Update README.dockerhub.md
      if: github.event_name != 'pull_request'
      run: |
        cp README.dockerhub.md README.md
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "Update Docker Hub README" || echo "No changes to commit"
        git push 