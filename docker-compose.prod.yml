version: '3.8'

services:
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: go-restfull-prod
    ports:
      - "8000:8000"
    volumes:
      - ./config/config.prod.yaml:/app/config/config.yaml
    environment:
      - ENV=production
      - TZ=Asia/Jakarta
      # Uncomment to use external config via environment variable
      # - CONFIG_PATH=/configs/user.yml
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - go-restfull-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:17
    container_name: go-restfull-postgres-prod
    environment:
      POSTGRES_DB: my_db
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: secret
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - go-restfull-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U my_user -d my_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: go-restfull-redis-prod
    ports:
      - "6380:6379"
    networks:
      - go-restfull-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: go-restfull-minio-prod
    ports:
      - "9001:9000"
      - "8901:8900"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":8900"
    volumes:
      - minio_data:/data
    networks:
      - go-restfull-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: go-restfull-rabbitmq-prod
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5673:5672"   # AMQP port
      - "15673:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - go-restfull-network
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    container_name: go-restfull-mailpit-prod
    ports:
      - "1026:1025"
      - "8026:8025"
    networks:
      - go-restfull-network
    restart: always

volumes:
  postgres_data:
  minio_data:
  rabbitmq_data:

networks:
  go-restfull-network:
    driver: bridge 