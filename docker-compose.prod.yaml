services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: on-failure
    depends_on:
      - redis
      - postgres
    volumes:
      - ./tmp:/app/tmp
    ports:
        - 8000:8000
    networks:
      - webapi


  postgres:
    image: postgres:17
    restart: on-failure
    volumes:
      - ./db_data/postgresql:/var/lib/postgresql/data
    environment:
      PGPASSWORD: 'secret'
      POSTGRES_DB: 'my_db'
      POSTGRES_USER: 'my_user'
      POSTGRES_PASSWORD: 'secret'
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "my_db", "-U", "my_user"]
      retries: 3
      timeout: 5s
    networks:
      - webapi

  redis:
    image: redis:alpine
    restart: on-failure
    volumes:
      - ./db_data/redis:/data
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - webapi

  minio:
    image: 'minio/minio:latest'
    ports:
      - '9000:9000'
      - '8900:8900'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - './db_data/minio:/data'
    command: 'minio server /data --console-address ":8900"'
    healthcheck:
      test:
        - CMD
        - mc
        - ready
        - local
      retries: 3
      timeout: 5s
    networks:
      - webapi

networks:
  webapi:
    driver: bridge
