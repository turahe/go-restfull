env: "dev" # dev, staging, production
app:
  key: "my-app-key"
  name: "My App"
  nameSlug: "my-app"
  jwtSecret: "your-super-secret-jwt-key-here-make-it-long-and-secure"
  accessTokenExpiration: 24

httpServer:
  port: 8001
  swaggerURL: "http://localhost:8001/swagger/"

log:
  level: "debug"
  stacktraceLevel: "error" # debug, info, warn, error, dpanic, panic, fatal
  fileEnabled: false
  fileSize: 10 # MB
  filePath: "log/log.log"
  fileCompress: false # enable log file compress before rotate
  maxAge: 1 # days to keep log files
  maxBackups: 10 # umber of log files

postgres:
  host: "localhost" # use "host.docker.internal" if you run app inside docker container
  port: 5432
  database: "my_db"
  schema: "public"
  username: "my_user"
  password: "secret"
  maxConnections: 20
  maxIdleConnections: 10

Redis:
  - host: "localhost"
    port: 6379
    password: ""
    db: 0

casbin:
  model: "config/rbac_model.conf"
  policy: "config/rbac_policy.csv"
  redis:
    host: "localhost"
    port: 6379
    password: ""
    db: 1
    key: "casbin_policy"

minio:
  enable: false
  endpoint: 'localhost:9000'
  accessKeyID: 'minioadmin'
  secretAccessKey: 'minioadmin'
  useSSL: false
  bucket: 'my-bucket'


sentry:
  dsn: ""
  environment: "DEV"
  release: "webapi@v0.1.0"
  debug: false


scheduler:
  timezone: "Asia/Jakarta" # Timezone for cron jobs
# schedules:
#   - cron: "0 */20 * * * *"
#     job: "SyncAll"

email:
  smtpHost: "localhost"
  smtpPort: 1025
  username: ""
  password: ""
  fromAddress: "noreply@mailpit.local"
  fromName: "Mailpit Test"

rabbitmq:
  host: "localhost"
  port: 5672
  username: "guest"
  password: "guest"
  vhost: "/"

# Meilisearch configuration
meilisearch:
  enable: true  # Set to true when Meilisearch is available
  host: "localhost"
  port: 7700
  masterKey: "your-super-secret-master-key-32-chars-long"
  apiKey: "your-api-key"
  indexes:
    # Posts index
    - name: "posts"
      uid: "posts"
      primaryKey: "id"
      settings:
        searchableAttributes:
          - "title"
          - "subtitle"
          - "description"
          - "content"
        filterableAttributes:
          - "status"
          - "language"
          - "is_sticky"
          - "published_at"
        sortableAttributes:
          - "created_at"
          - "updated_at"
          - "published_at"
        rankingRules:
          - "words"
          - "typo"
          - "proximity"
          - "attribute"
          - "sort"
          - "exactness"
    
    # Users index
    - name: "users"
      uid: "users"
      primaryKey: "id"
      settings:
        searchableAttributes:
          - "username"
          - "email"
          - "first_name"
          - "last_name"
        filterableAttributes:
          - "status"
          - "role"
        sortableAttributes:
          - "created_at"
          - "updated_at"
    
    # Organizations index
    - name: "organizations"
      uid: "organizations"
      primaryKey: "id"
      settings:
        searchableAttributes:
          - "name"
          - "description"
          - "code"
        filterableAttributes:
          - "type"
          - "status"
        sortableAttributes:
          - "created_at"
          - "updated_at"
    
    # Content index
    - name: "content"
      uid: "content"
      primaryKey: "id"
      settings:
        searchableAttributes:
          - "content_raw"
          - "content_html"
          - "model_type"
        filterableAttributes:
          - "model_type"
          - "created_by"
          - "updated_by"
        sortableAttributes:
          - "created_at"
          - "updated_at"
        rankingRules:
          - "words"
          - "typo"
          - "proximity"
          - "attribute"
          - "sort"
          - "exactness"
